{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerry\\\\Downloads\\\\PDF_APP\\\\pdf\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport React, { useState } from \"react\";\nimport jsPDF from \"jspdf\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst pxToMm = 0.164583; // Conversion from pixels to mm\n\nfunction App() {\n  _s();\n  const [images, setImages] = useState([]);\n  const [filePathNames, setFilePathNames] = useState([]);\n  const doc = new jsPDF({\n    orientation: \"landscape\"\n  });\n  doc.deletePage(1);\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    setFilePathNames(prevFilePathNames => [...prevFilePathNames, file]);\n    reader.onload = e => {\n      setImages(prevImages => [...prevImages, e.target.result]); // Append new image\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleGeneratePDF = () => {\n    let numPagesDone = 0;\n    if (images.length == 0) {\n      return;\n    }\n    images.forEach((image, index) => {\n      const imageObject = new Image();\n      imageObject.src = image;\n      imageObject.onload = () => {\n        if (imageObject.height < imageObject.width) {\n          // Case for horizontal photo\n          doc.addPage([imageObject.height * pxToMm, imageObject.width * pxToMm], \"landscape\");\n          doc.addImage(image, \"jpg\", 0, 0, imageObject.width * pxToMm, imageObject.height * pxToMm);\n        } else {\n          // Case for vertical photo\n          doc.addPage([imageObject.height * pxToMm, imageObject.width * pxToMm], \"landscape\");\n          doc.addImage(image, \"jpg\", 0, 0, imageObject.height * pxToMm, imageObject.width * pxToMm);\n        }\n        numPagesDone++;\n        if (numPagesDone == images.length) {\n          doc.save(\"merged.pdf\");\n        }\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Join Images to PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadTitle\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fileList\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadTitle\",\n            children: \"File List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: filePathNames.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"downloadButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"generatePDFButton\",\n          onClick: handleGeneratePDF,\n          children: \"Generate PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"fcc5A9VvsDEeWIKOuFjlMkPZ9tM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","pxToMm","App","_s","images","setImages","filePathNames","setFilePathNames","doc","orientation","deletePage","handleImageChange","event","file","target","files","reader","FileReader","prevFilePathNames","onload","e","prevImages","result","readAsDataURL","handleGeneratePDF","numPagesDone","length","forEach","image","index","imageObject","Image","src","height","width","addPage","addImage","save","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","map","item","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jerry/Downloads/PDF_APP/pdf/src/App.js"],"sourcesContent":["import \"./style.css\";\nimport React, { useState } from \"react\";\nimport jsPDF from \"jspdf\";\n\nconst pxToMm = 0.164583; // Conversion from pixels to mm\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [filePathNames, setFilePathNames] = useState([]);\n  const doc = new jsPDF({\n    orientation: \"landscape\",\n  });\n  doc.deletePage(1);\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    setFilePathNames((prevFilePathNames) => [...prevFilePathNames, file]);\n    reader.onload = (e) => {\n      setImages((prevImages) => [...prevImages, e.target.result]); // Append new image\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const handleGeneratePDF = () => {\n    let numPagesDone = 0;\n\n    if (images.length == 0) {\n      return;\n    }\n    images.forEach((image, index) => {\n      const imageObject = new Image();\n      imageObject.src = image;\n\n      imageObject.onload = () => {\n        if (imageObject.height < imageObject.width) {\n          // Case for horizontal photo\n          doc.addPage(\n            [imageObject.height * pxToMm, imageObject.width * pxToMm],\n            \"landscape\"\n          );\n          doc.addImage(\n            image,\n            \"jpg\",\n            0,\n            0,\n            imageObject.width * pxToMm,\n            imageObject.height * pxToMm\n          );\n        } else {\n          // Case for vertical photo\n          doc.addPage(\n            [imageObject.height * pxToMm, imageObject.width * pxToMm],\n            \"landscape\"\n          );\n          doc.addImage(\n            image,\n            \"jpg\",\n            0,\n            0,\n            imageObject.height * pxToMm,\n            imageObject.width * pxToMm\n          );\n        }\n\n        numPagesDone++;\n\n        if (numPagesDone == images.length) {\n          doc.save(\"merged.pdf\");\n        }\n      };\n    });\n  };\n\n  return (\n    <>\n      <div className=\"body\">\n        <div className=\"title\">Join Images to PDF</div>\n\n        <div className=\"upload\">\n          <div className=\"uploadTitle\">Upload</div>\n          <div>\n            <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n          </div>\n          <div className=\"fileList\">\n            <div className=\"uploadTitle\">File List</div>\n            <ul>\n              {filePathNames.map((item, index) => (\n                <li key={index}>{item.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <div className=\"downloadButton\">\n          <button className=\"generatePDFButton\" onClick={handleGeneratePDF}>\n            Generate PDF\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
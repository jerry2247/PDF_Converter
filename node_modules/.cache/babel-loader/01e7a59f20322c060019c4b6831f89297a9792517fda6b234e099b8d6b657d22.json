{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerry\\\\Downloads\\\\PDF_APP\\\\pdf\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport React, { useState } from \"react\";\nimport jsPDF from \"jspdf\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst pxToMm = 0.264583; // Conversion from pixels to mm\n\nfunction App() {\n  _s();\n  const [images, setImages] = useState([]);\n  const [filePathNames, setFilePathNames] = useState([]);\n  const doc = new jsPDF();\n  doc.deletePage(1);\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    setFilePathNames(prevFilePathNames => [...prevFilePathNames, file]);\n    reader.onload = e => {\n      setImages(prevImages => [...prevImages, e.target.result]); // Append new image\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleGeneratePDF = () => {\n    let numPagesDone = 0;\n    if (images.length == 0) {\n      return;\n    }\n    images.forEach((image, index) => {\n      const imageObject = new Image();\n      imageObject.src = image;\n      imageObject.onload = () => {\n        console.log(imageObject.width);\n        doc.addPage([imageObject.width * pxToMm, imageObject.height * pxToMm]);\n        EXIF.getData(image, function () {\n          let orientation = EXIF.getTag(this, \"Orientation\");\n          if (orientation === 6) {\n            // 90-degree rotation needed\n            doc.rotate(90);\n          } else if (orientation === 3) {\n            // 180-degree rotation needed\n            doc.rotate(180);\n          } else if (orientation === 8) {\n            // -90-degree rotation needed\n            doc.rotate(-90);\n          }\n          doc.addImage(image, \"jpg\", 0, 0, imageObject.width * pxToMm, imageObject.height * pxToMm);\n        });\n\n        // doc.addImage(\n        //   image,\n        //   \"jpg\",\n        //   0,\n        //   0,\n        //   imageObject.width * pxToMm,\n        //   imageObject.height * pxToMm\n        // );\n\n        numPagesDone++;\n        if (numPagesDone == images.length) {\n          doc.save(\"merged.pdf\");\n        }\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Join Images to PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadTitle\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"generatePDFButton\",\n          onClick: handleGeneratePDF,\n          children: \"Generate PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fileList\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadTitle\",\n          children: \"File List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: filePathNames.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"fcc5A9VvsDEeWIKOuFjlMkPZ9tM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","pxToMm","App","_s","images","setImages","filePathNames","setFilePathNames","doc","deletePage","handleImageChange","event","file","target","files","reader","FileReader","prevFilePathNames","onload","e","prevImages","result","readAsDataURL","handleGeneratePDF","numPagesDone","length","forEach","image","index","imageObject","Image","src","console","log","width","addPage","height","EXIF","getData","orientation","getTag","rotate","addImage","save","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","map","item","name","_c","$RefreshReg$"],"sources":["C:/Users/jerry/Downloads/PDF_APP/pdf/src/App.js"],"sourcesContent":["import \"./style.css\";\nimport React, { useState } from \"react\";\nimport jsPDF from \"jspdf\";\n\nconst pxToMm = 0.264583; // Conversion from pixels to mm\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [filePathNames, setFilePathNames] = useState([]);\n  const doc = new jsPDF();\n  doc.deletePage(1);\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    setFilePathNames((prevFilePathNames) => [...prevFilePathNames, file]);\n    reader.onload = (e) => {\n      setImages((prevImages) => [...prevImages, e.target.result]); // Append new image\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const handleGeneratePDF = () => {\n    let numPagesDone = 0;\n\n    if (images.length == 0) {\n      return;\n    }\n    images.forEach((image, index) => {\n      const imageObject = new Image();\n      imageObject.src = image;\n\n      imageObject.onload = () => {\n        console.log(imageObject.width);\n        doc.addPage([imageObject.width * pxToMm, imageObject.height * pxToMm]);\n\n        EXIF.getData(image, function () {\n          let orientation = EXIF.getTag(this, \"Orientation\");\n\n          if (orientation === 6) {\n            // 90-degree rotation needed\n            doc.rotate(90);\n          } else if (orientation === 3) {\n            // 180-degree rotation needed\n            doc.rotate(180);\n          } else if (orientation === 8) {\n            // -90-degree rotation needed\n            doc.rotate(-90);\n          }\n\n          doc.addImage(\n            image,\n            \"jpg\",\n            0,\n            0,\n            imageObject.width * pxToMm,\n            imageObject.height * pxToMm\n          );\n        });\n\n        // doc.addImage(\n        //   image,\n        //   \"jpg\",\n        //   0,\n        //   0,\n        //   imageObject.width * pxToMm,\n        //   imageObject.height * pxToMm\n        // );\n\n        numPagesDone++;\n\n        if (numPagesDone == images.length) {\n          doc.save(\"merged.pdf\");\n        }\n      };\n    });\n  };\n\n  return (\n    <>\n      <div className=\"title\">Join Images to PDF</div>\n\n      <div className=\"upload\">\n        <div className=\"uploadTitle\">Upload</div>\n        <div>\n          <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n          <button className=\"generatePDFButton\" onClick={handleGeneratePDF}>\n            Generate PDF\n          </button>\n        </div>\n        <div className=\"fileList\">\n          <div className=\"uploadTitle\">File List</div>\n          <ul>\n            {filePathNames.map((item, index) => (\n              <li key={index}>{item.name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}